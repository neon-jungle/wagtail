// Generated by CoffeeScript 1.6.2
(function() {
    (function($) {
        return $.widget('IKS.hallowagtaillink', {
            options: {
                uuid: '',
                editable: null
            },
            populateToolbar: function(toolbar) {
                var button, getEnclosingLink, widget;

                widget = this;
                getEnclosingLink = function() {
                    var node;

                    node = widget.options.editable.getSelection().commonAncestorContainer;
                    return $(node).parents('a').get(0);
                };

                button = $('<span class="' + this.widgetName + '"></span>');
                button.hallobutton({
                    uuid: this.options.uuid,
                    editable: this.options.editable,
                    label: 'Links',
                    icon: 'icon-link',
                    command: null,
                    queryState: function(event) {
                        return button.hallobutton('checked', !!getEnclosingLink());
                    }
                });

                toolbar.append(button);
                return button.on('click', function(event) {
                    var enclosingLink, lastSelection, url;

                    enclosingLink = getEnclosingLink();
                    if (enclosingLink) {
                        $(enclosingLink).replaceWith(enclosingLink.innerHTML);
                        button.hallobutton('checked', false);
                        return widget.options.editable.element.trigger('change');
                    } else {
                        lastSelection = widget.options.editable.getSelection();

                        url = window.chooserUrls.pageChooser;
                        if (lastSelection.collapsed) {
                            url += '?prompt_for_link_text=true';
                        }

                        modal = ModalWorkflow({
                            url: url,
                            bind: {
                                click: function(e) {
                                    if (!$(e.target).is('p.link-types a')) return;
                                    var link = e.target;
                                    modal.loadUrl(link.href);
                                    return false;
                                }
                            },
                            responses: {
                                linkChosen: function(link) {
                                    var a;

                                    a = document.createElement('a');
                                    a.setAttribute('href', link.url);
                                    a.setAttribute('data-linktype', link.type);

                                    Object.keys(link.data || {}).forEach(function(key) {
                                        a.setAttribute('data-' + key, link.data[key]);
                                    });

                                    if ((!lastSelection.collapsed) && lastSelection.canSurroundContents()) {
                                        lastSelection.surroundContents(a);
                                    } else {
                                        a.appendChild(document.createTextNode(link.title));
                                        lastSelection.insertNode(a);
                                    }

                                    return widget.options.editable.element.trigger('change');
                                }
                            }
                        });
                        return modal;
                    }
                });
            }
        });
    })(jQuery);

}).call(this);
